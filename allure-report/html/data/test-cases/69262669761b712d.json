{
  "uid" : "69262669761b712d",
  "name" : "001-登录企业平台",
  "fullName" : "cases.case_enterprise.test_001_login.TestEnterPrise#test_enterprise_login",
  "historyId" : "3fb2344fb152ae5b672b73b9c39b82d6",
  "time" : {
    "start" : 1657453030292,
    "stop" : 1657453076785,
    "duration" : 46493
  },
  "status" : "broken",
  "statusMessage" : "IndexError: list index out of range",
  "statusTrace" : "self = <test_001_login.TestEnterPrise object at 0x000001E226B3A490>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9233bd7a58b2687b1866beb7d76070bb\")>\nbase_url = 'https://5g.fontdo.com/enterprise//#/login'\n\n    @pytest.mark.run(order=1)\n    @allure.title('001-登录企业平台')\n    @pytest.mark.dependency(name='enterprise_login', scope='session')\n    def test_enterprise_login(self, browser, base_url):\n        page_ep_login = PageEnterpriseLogin(browser)\n        page_ep_login.open(base_url)\n        with allure.step(\"输入账号:{}\".format(login_email)):\n            page_ep_login.username = login_email\n        with allure.step(\"输入密码:{}\".format(login_password)):\n            page_ep_login.password = login_password\n        with allure.step(\"勾选服务协议\"):\n            page_ep_login.agreement.click()\n        with allure.step(\"输入图形验证码并登录验证\"):\n            while True:\n                while True:\n                    code_url = page_ep_login.number_img.get_attribute(\"src\")\n                    code = get_code(code_url)\n                    if len(code) == 6 and code.isdigit():\n                        break\n                    page_ep_login.reflush_code.click()\n                page_ep_login.number = Keys.CONTROL, 'a'\n                page_ep_login.number = code\n                page_ep_login.login_btn.click()\n                notice = page_ep_login.notice.text\n                if notice == \"图形验证码输入有误，请重新输入\":\n                    continue\n                elif notice == \"登录成功！\":\n                    break\n                else:\n                    assert False, notice\n        assert page_ep_login.get_url == \"https://5g.fontdo.com/enterprise//#/\"\n        with allure.step(\"关闭登录提示\"):\n            page_ep_login.know.click()\n        with allure.step(\"获取断言数据：邮箱账号\"):\n>           email_text = page_ep_login.email.text\n\ncases\\case_enterprise\\test_001_login.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npoium\\page_objects.py:287: in text\n    elem = self.__get_element(self.k, self.v)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <poium.page_objects.Element object at 0x000001E225BDCEE0>, by = 'xpath'\nvalue = '//span[@aria-label=\"maila\"]/..'\n\n    def __get_element(self, by, value):\n        \"\"\"\n        Judge element positioning way, and returns the element.\n        \"\"\"\n    \n        # selenium\n        if by == \"id_\":\n            self.__find_element((By.ID, value))\n            elem = Browser.driver.find_elements(By.ID, value)[self.index]\n        elif by == \"name\":\n            self.__find_element((By.NAME, value))\n            elem = Browser.driver.find_elements(By.NAME, value)[self.index]\n        elif by == \"class_name\":\n            self.__find_element((By.CLASS_NAME, value))\n            elem = Browser.driver.find_elements(By.CLASS_NAME, value)[self.index]\n        elif by == \"tag\":\n            self.__find_element((By.TAG_NAME, value))\n            elem = Browser.driver.find_elements(By.TAG_NAME, value)[self.index]\n        elif by == \"link_text\":\n            self.__find_element((By.LINK_TEXT, value))\n            elem = Browser.driver.find_elements(By.LINK_TEXT, value)[self.index]\n        elif by == \"partial_link_text\":\n            self.__find_element((By.PARTIAL_LINK_TEXT, value))\n            elem = Browser.driver.find_elements(By.PARTIAL_LINK_TEXT, value)[self.index]\n        elif by == \"xpath\":\n            self.__find_element((By.XPATH, value))\n>           elem = Browser.driver.find_elements(By.XPATH, value)[self.index]\nE           IndexError: list index out of range\n\npoium\\page_objects.py:176: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1657453030291,
      "stop" : 1657453030291,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "reset",
    "time" : {
      "start" : 1657453030290,
      "stop" : 1657453030290,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1657453027922,
      "stop" : 1657453028078,
      "duration" : 156
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1657453028078,
      "stop" : 1657453030289,
      "duration" : 2211
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "xunit_setup_method_fixture_TestEnterPrise",
    "time" : {
      "start" : 1657453030290,
      "stop" : 1657453030290,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "IndexError: list index out of range",
    "statusTrace" : "self = <test_001_login.TestEnterPrise object at 0x000001E226B3A490>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9233bd7a58b2687b1866beb7d76070bb\")>\nbase_url = 'https://5g.fontdo.com/enterprise//#/login'\n\n    @pytest.mark.run(order=1)\n    @allure.title('001-登录企业平台')\n    @pytest.mark.dependency(name='enterprise_login', scope='session')\n    def test_enterprise_login(self, browser, base_url):\n        page_ep_login = PageEnterpriseLogin(browser)\n        page_ep_login.open(base_url)\n        with allure.step(\"输入账号:{}\".format(login_email)):\n            page_ep_login.username = login_email\n        with allure.step(\"输入密码:{}\".format(login_password)):\n            page_ep_login.password = login_password\n        with allure.step(\"勾选服务协议\"):\n            page_ep_login.agreement.click()\n        with allure.step(\"输入图形验证码并登录验证\"):\n            while True:\n                while True:\n                    code_url = page_ep_login.number_img.get_attribute(\"src\")\n                    code = get_code(code_url)\n                    if len(code) == 6 and code.isdigit():\n                        break\n                    page_ep_login.reflush_code.click()\n                page_ep_login.number = Keys.CONTROL, 'a'\n                page_ep_login.number = code\n                page_ep_login.login_btn.click()\n                notice = page_ep_login.notice.text\n                if notice == \"图形验证码输入有误，请重新输入\":\n                    continue\n                elif notice == \"登录成功！\":\n                    break\n                else:\n                    assert False, notice\n        assert page_ep_login.get_url == \"https://5g.fontdo.com/enterprise//#/\"\n        with allure.step(\"关闭登录提示\"):\n            page_ep_login.know.click()\n        with allure.step(\"获取断言数据：邮箱账号\"):\n>           email_text = page_ep_login.email.text\n\ncases\\case_enterprise\\test_001_login.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npoium\\page_objects.py:287: in text\n    elem = self.__get_element(self.k, self.v)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <poium.page_objects.Element object at 0x000001E225BDCEE0>, by = 'xpath'\nvalue = '//span[@aria-label=\"maila\"]/..'\n\n    def __get_element(self, by, value):\n        \"\"\"\n        Judge element positioning way, and returns the element.\n        \"\"\"\n    \n        # selenium\n        if by == \"id_\":\n            self.__find_element((By.ID, value))\n            elem = Browser.driver.find_elements(By.ID, value)[self.index]\n        elif by == \"name\":\n            self.__find_element((By.NAME, value))\n            elem = Browser.driver.find_elements(By.NAME, value)[self.index]\n        elif by == \"class_name\":\n            self.__find_element((By.CLASS_NAME, value))\n            elem = Browser.driver.find_elements(By.CLASS_NAME, value)[self.index]\n        elif by == \"tag\":\n            self.__find_element((By.TAG_NAME, value))\n            elem = Browser.driver.find_elements(By.TAG_NAME, value)[self.index]\n        elif by == \"link_text\":\n            self.__find_element((By.LINK_TEXT, value))\n            elem = Browser.driver.find_elements(By.LINK_TEXT, value)[self.index]\n        elif by == \"partial_link_text\":\n            self.__find_element((By.PARTIAL_LINK_TEXT, value))\n            elem = Browser.driver.find_elements(By.PARTIAL_LINK_TEXT, value)[self.index]\n        elif by == \"xpath\":\n            self.__find_element((By.XPATH, value))\n>           elem = Browser.driver.find_elements(By.XPATH, value)[self.index]\nE           IndexError: list index out of range\n\npoium\\page_objects.py:176: IndexError",
    "steps" : [ {
      "name" : "输入账号:chenlq@fontdo.com",
      "time" : {
        "start" : 1657453032647,
        "stop" : 1657453034299,
        "duration" : 1652
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入密码:Fontdo@test",
      "time" : {
        "start" : 1657453034299,
        "stop" : 1657453035499,
        "duration" : 1200
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "勾选服务协议",
      "time" : {
        "start" : 1657453035499,
        "stop" : 1657453036606,
        "duration" : 1107
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入图形验证码并登录验证",
      "time" : {
        "start" : 1657453036606,
        "stop" : 1657453044968,
        "duration" : 8362
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "关闭登录提示",
      "time" : {
        "start" : 1657453045015,
        "stop" : 1657453046163,
        "duration" : 1148
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "获取断言数据：邮箱账号",
      "time" : {
        "start" : 1657453046164,
        "stop" : 1657453076784,
        "duration" : 30620
      },
      "status" : "broken",
      "statusMessage" : "IndexError: list index out of range\n",
      "statusTrace" : "  File \"E:\\文档\\MyRepository\\ui-automation-framework\\cases\\case_enterprise\\test_001_login.py\", line 73, in test_enterprise_login\n    email_text = page_ep_login.email.text\n  File \"E:\\文档\\MyRepository\\ui-automation-framework\\poium\\page_objects.py\", line 287, in text\n    elem = self.__get_element(self.k, self.v)\n  File \"E:\\文档\\MyRepository\\ui-automation-framework\\poium\\page_objects.py\", line 176, in __get_element\n    elem = Browser.driver.find_elements(By.XPATH, value)[self.index]\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1657453077384,
        "stop" : 1657453077677,
        "duration" : 293
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6d404e71dcf0bb9e",
        "name" : "失败截图",
        "source" : "6d404e71dcf0bb9e.png",
        "type" : "image/png",
        "size" : 139624
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "775c6dbaeb8b13ff",
      "name" : "log",
      "source" : "775c6dbaeb8b13ff.txt",
      "type" : "text/plain",
      "size" : 335
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "hasContent" : true,
    "stepsCount" : 7
  },
  "afterStages" : [ {
    "name" : "reset::0",
    "time" : {
      "start" : 1657453077682,
      "stop" : 1657453078703,
      "duration" : 1021
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "browser::0",
    "time" : {
      "start" : 1657453078706,
      "stop" : 1657453078706,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "xunit_setup_method_fixture_TestEnterPrise::0",
    "time" : {
      "start" : 1657453077678,
      "stop" : 1657453077680,
      "duration" : 2
    },
    "status" : "broken",
    "statusMessage" : "AttributeError: 'TestEnterPrise' object has no attribute 'balance'\n",
    "statusTrace" : "  File \"D:\\MyApp\\Python-3.8.8\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\MyApp\\Python-3.8.8\\lib\\site-packages\\_pytest\\fixtures.py\", line 941, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\MyApp\\Python-3.8.8\\lib\\site-packages\\_pytest\\python.py\", line 845, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"D:\\MyApp\\Python-3.8.8\\lib\\site-packages\\_pytest\\python.py\", line 741, in _call_with_optional_argument\n    func()\n  File \"E:\\文档\\MyRepository\\ui-automation-framework\\cases\\case_enterprise\\test_001_login.py\", line 80, in teardown_method\n    conf.set(\"Balance\", \"balance\", self.balance)\n",
    "steps" : [ {
      "name" : "缓存账号余额",
      "time" : {
        "start" : 1657453077678,
        "stop" : 1657453077678,
        "duration" : 0
      },
      "status" : "broken",
      "statusMessage" : "AttributeError: 'TestEnterPrise' object has no attribute 'balance'\n",
      "statusTrace" : "  File \"E:\\文档\\MyRepository\\ui-automation-framework\\cases\\case_enterprise\\test_001_login.py\", line 80, in teardown_method\n    conf.set(\"Balance\", \"balance\", self.balance)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : true,
    "stepsCount" : 1
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "01-登录"
  }, {
    "name" : "tag",
    "value" : "dependency(name='enterprise_login', scope='session')"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "cases.case_enterprise"
  }, {
    "name" : "suite",
    "value" : "test_001_login"
  }, {
    "name" : "subSuite",
    "value" : "TestEnterPrise"
  }, {
    "name" : "host",
    "value" : "DESKTOP-O8KGD51"
  }, {
    "name" : "thread",
    "value" : "16112-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.case_enterprise.test_001_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dependency(name='enterprise_login', scope='session')", "run(order=1)" ]
  },
  "source" : "69262669761b712d.json",
  "parameterValues" : [ ]
}